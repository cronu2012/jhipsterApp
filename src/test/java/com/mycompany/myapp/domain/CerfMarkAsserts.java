package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CerfMarkAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfMarkAllPropertiesEquals(CerfMark expected, CerfMark actual) {
        assertCerfMarkAutoGeneratedPropertiesEquals(expected, actual);
        assertCerfMarkAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfMarkAllUpdatablePropertiesEquals(CerfMark expected, CerfMark actual) {
        assertCerfMarkUpdatableFieldsEquals(expected, actual);
        assertCerfMarkUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfMarkAutoGeneratedPropertiesEquals(CerfMark expected, CerfMark actual) {
        assertThat(expected)
            .as("Verify CerfMark auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfMarkUpdatableFieldsEquals(CerfMark expected, CerfMark actual) {
        assertThat(expected)
            .as("Verify CerfMark relevant properties")
            .satisfies(e -> assertThat(e.getRelType()).as("check relType").isEqualTo(actual.getRelType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfMarkUpdatableRelationshipsEquals(CerfMark expected, CerfMark actual) {
        assertThat(expected)
            .as("Verify CerfMark relationships")
            .satisfies(e -> assertThat(e.getCerf()).as("check cerf").isEqualTo(actual.getCerf()))
            .satisfies(e -> assertThat(e.getMark()).as("check mark").isEqualTo(actual.getMark()));
    }
}
