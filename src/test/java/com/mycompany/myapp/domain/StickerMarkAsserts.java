package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StickerMarkAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStickerMarkAllPropertiesEquals(StickerMark expected, StickerMark actual) {
        assertStickerMarkAutoGeneratedPropertiesEquals(expected, actual);
        assertStickerMarkAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStickerMarkAllUpdatablePropertiesEquals(StickerMark expected, StickerMark actual) {
        assertStickerMarkUpdatableFieldsEquals(expected, actual);
        assertStickerMarkUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStickerMarkAutoGeneratedPropertiesEquals(StickerMark expected, StickerMark actual) {
        assertThat(expected)
            .as("Verify StickerMark auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStickerMarkUpdatableFieldsEquals(StickerMark expected, StickerMark actual) {
        assertThat(expected)
            .as("Verify StickerMark relevant properties")
            .satisfies(e -> assertThat(e.getRelType()).as("check relType").isEqualTo(actual.getRelType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStickerMarkUpdatableRelationshipsEquals(StickerMark expected, StickerMark actual) {
        assertThat(expected)
            .as("Verify StickerMark relationships")
            .satisfies(e -> assertThat(e.getSticker()).as("check sticker").isEqualTo(actual.getSticker()))
            .satisfies(e -> assertThat(e.getMark()).as("check mark").isEqualTo(actual.getMark()));
    }
}
