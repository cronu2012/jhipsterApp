package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CerfStdAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfStdAllPropertiesEquals(CerfStd expected, CerfStd actual) {
        assertCerfStdAutoGeneratedPropertiesEquals(expected, actual);
        assertCerfStdAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfStdAllUpdatablePropertiesEquals(CerfStd expected, CerfStd actual) {
        assertCerfStdUpdatableFieldsEquals(expected, actual);
        assertCerfStdUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfStdAutoGeneratedPropertiesEquals(CerfStd expected, CerfStd actual) {
        assertThat(expected)
            .as("Verify CerfStd auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfStdUpdatableFieldsEquals(CerfStd expected, CerfStd actual) {
        assertThat(expected)
            .as("Verify CerfStd relevant properties")
            .satisfies(e -> assertThat(e.getRelType()).as("check relType").isEqualTo(actual.getRelType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfStdUpdatableRelationshipsEquals(CerfStd expected, CerfStd actual) {
        assertThat(expected)
            .as("Verify CerfStd relationships")
            .satisfies(e -> assertThat(e.getCerf()).as("check cerf").isEqualTo(actual.getCerf()))
            .satisfies(e -> assertThat(e.getStd()).as("check std").isEqualTo(actual.getStd()));
    }
}
