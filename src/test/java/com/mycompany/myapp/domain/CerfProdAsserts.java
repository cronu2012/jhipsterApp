package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CerfProdAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfProdAllPropertiesEquals(CerfProd expected, CerfProd actual) {
        assertCerfProdAutoGeneratedPropertiesEquals(expected, actual);
        assertCerfProdAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfProdAllUpdatablePropertiesEquals(CerfProd expected, CerfProd actual) {
        assertCerfProdUpdatableFieldsEquals(expected, actual);
        assertCerfProdUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfProdAutoGeneratedPropertiesEquals(CerfProd expected, CerfProd actual) {
        assertThat(expected)
            .as("Verify CerfProd auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfProdUpdatableFieldsEquals(CerfProd expected, CerfProd actual) {
        assertThat(expected)
            .as("Verify CerfProd relevant properties")
            .satisfies(e -> assertThat(e.getRelType()).as("check relType").isEqualTo(actual.getRelType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfProdUpdatableRelationshipsEquals(CerfProd expected, CerfProd actual) {
        assertThat(expected)
            .as("Verify CerfProd relationships")
            .satisfies(e -> assertThat(e.getCerf()).as("check cerf").isEqualTo(actual.getCerf()))
            .satisfies(e -> assertThat(e.getProd()).as("check prod").isEqualTo(actual.getProd()));
    }
}
