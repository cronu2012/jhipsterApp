package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CerfAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfAllPropertiesEquals(Cerf expected, Cerf actual) {
        assertCerfAutoGeneratedPropertiesEquals(expected, actual);
        assertCerfAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfAllUpdatablePropertiesEquals(Cerf expected, Cerf actual) {
        assertCerfUpdatableFieldsEquals(expected, actual);
        assertCerfUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfAutoGeneratedPropertiesEquals(Cerf expected, Cerf actual) {
        assertThat(expected)
            .as("Verify Cerf auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfUpdatableFieldsEquals(Cerf expected, Cerf actual) {
        assertThat(expected)
            .as("Verify Cerf relevant properties")
            .satisfies(e -> assertThat(e.getCerfNo()).as("check cerfNo").isEqualTo(actual.getCerfNo()))
            .satisfies(e -> assertThat(e.getCerfVer()).as("check cerfVer").isEqualTo(actual.getCerfVer()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getPdf()).as("check pdf").isEqualTo(actual.getPdf()))
            .satisfies(e -> assertThat(e.getPdfContentType()).as("check pdf contenty type").isEqualTo(actual.getPdfContentType()))
            .satisfies(e -> assertThat(e.getIssuDt()).as("check issuDt").isEqualTo(actual.getIssuDt()))
            .satisfies(e -> assertThat(e.getExpDt()).as("check expDt").isEqualTo(actual.getExpDt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCerfUpdatableRelationshipsEquals(Cerf expected, Cerf actual) {}
}
