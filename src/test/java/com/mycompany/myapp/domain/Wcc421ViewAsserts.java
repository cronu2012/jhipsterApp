package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class Wcc421ViewAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWcc421ViewAllPropertiesEquals(Wcc421View expected, Wcc421View actual) {
        assertWcc421ViewAutoGeneratedPropertiesEquals(expected, actual);
        assertWcc421ViewAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWcc421ViewAllUpdatablePropertiesEquals(Wcc421View expected, Wcc421View actual) {
        assertWcc421ViewUpdatableFieldsEquals(expected, actual);
        assertWcc421ViewUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWcc421ViewAutoGeneratedPropertiesEquals(Wcc421View expected, Wcc421View actual) {
        assertThat(expected)
            .as("Verify Wcc421View auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWcc421ViewUpdatableFieldsEquals(Wcc421View expected, Wcc421View actual) {
        assertThat(expected)
            .as("Verify Wcc421View relevant properties")
            .satisfies(e -> assertThat(e.getCerfId()).as("check cerfId").isEqualTo(actual.getCerfId()))
            .satisfies(e -> assertThat(e.getCountryChName()).as("check countryChName").isEqualTo(actual.getCountryChName()))
            .satisfies(e -> assertThat(e.getCerfNo()).as("check cerfNo").isEqualTo(actual.getCerfNo()))
            .satisfies(e -> assertThat(e.getCerfVer()).as("check cerfVer").isEqualTo(actual.getCerfVer()))
            .satisfies(e -> assertThat(e.getCerfStatus()).as("check cerfStatus").isEqualTo(actual.getCerfStatus()))
            .satisfies(e -> assertThat(e.getCompanyChName()).as("check companyChName").isEqualTo(actual.getCompanyChName()))
            .satisfies(e -> assertThat(e.getRelType()).as("check relType").isEqualTo(actual.getRelType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWcc421ViewUpdatableRelationshipsEquals(Wcc421View expected, Wcc421View actual) {}
}
