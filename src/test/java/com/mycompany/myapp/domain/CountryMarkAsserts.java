package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CountryMarkAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCountryMarkAllPropertiesEquals(CountryMark expected, CountryMark actual) {
        assertCountryMarkAutoGeneratedPropertiesEquals(expected, actual);
        assertCountryMarkAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCountryMarkAllUpdatablePropertiesEquals(CountryMark expected, CountryMark actual) {
        assertCountryMarkUpdatableFieldsEquals(expected, actual);
        assertCountryMarkUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCountryMarkAutoGeneratedPropertiesEquals(CountryMark expected, CountryMark actual) {
        assertThat(expected)
            .as("Verify CountryMark auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCountryMarkUpdatableFieldsEquals(CountryMark expected, CountryMark actual) {
        assertThat(expected)
            .as("Verify CountryMark relevant properties")
            .satisfies(e -> assertThat(e.getRelType()).as("check relType").isEqualTo(actual.getRelType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCountryMarkUpdatableRelationshipsEquals(CountryMark expected, CountryMark actual) {
        assertThat(expected)
            .as("Verify CountryMark relationships")
            .satisfies(e -> assertThat(e.getCountry()).as("check country").isEqualTo(actual.getCountry()))
            .satisfies(e -> assertThat(e.getMark()).as("check mark").isEqualTo(actual.getMark()));
    }
}
